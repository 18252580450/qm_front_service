2018-10-26 15:25:29 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-26 15:25:29 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Fri Oct 26 15:25:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-26 15:25:32 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-26 15:25:32 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-26 15:25:33 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-26 15:25:33 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-26 15:25:33 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-26 15:25:34 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-26 15:25:34 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66231945] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-26 15:25:34 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$823d1c42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-26 15:25:36 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-26 15:25:36 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-26 15:25:36 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-26 15:25:37 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-26 15:25:37 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-26 15:25:37 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 7531 ms
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-26 15:25:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-26 15:25:51 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[POST]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-26 15:25:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-26 15:25:54 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-26 15:25:54 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-26 15:25:54 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1850f2da
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-26 15:25:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-26 15:25:56 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Fri Oct 26 15:25:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31] and template loader path [classpath:/templates/]
2018-10-26 15:25:56 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-26 15:25:56 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-26 15:25:56 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-26 15:25:56 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-26 15:25:57 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Fri Oct 26 15:25:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-26 15:25:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-26 15:25:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-26 15:25:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-26 15:25:58 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=fc258b1,type=ConfigurationPropertiesRebinder]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-26 15:26:00 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-26 15:26:01 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-26 15:26:01 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-26 15:26:01 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-26 15:26:01 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-26 15:26:02 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-26 15:26:02 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-26 15:26:02 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-26 15:26:02 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-26 15:26:02 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-26 15:26:02 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 37.095 seconds (JVM running for 38.491)
2018-10-26 16:20:52 qm_configservice [http-nio-9002-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-26 16:20:52 qm_configservice [http-nio-9002-exec-3] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-26 16:20:52 qm_configservice [http-nio-9002-exec-3] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 319 ms
2018-10-29 14:43:50 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 14:43:50 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 14:43:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-29 14:43:52 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 14:43:53 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 14:43:53 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 14:43:53 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 14:43:54 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 14:43:54 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 14:43:54 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66231945] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 14:43:55 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$823d1c42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 14:43:57 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 14:43:57 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 14:43:57 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 14:43:57 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 14:43:57 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 14:43:57 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 7687 ms
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 14:43:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 14:44:11 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[POST]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 14:44:14 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 14:44:14 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 14:44:14 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 14:44:14 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6ace919c
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 14:43:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31] and template loader path [classpath:/templates/]
2018-10-29 14:44:15 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 14:44:16 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 14:44:16 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 14:44:16 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 14:44:16 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 14:43:50 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-29 14:44:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 14:44:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 14:44:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 14:44:17 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=fc258b1,type=ConfigurationPropertiesRebinder]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 14:44:19 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 14:44:19 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 14:44:19 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 14:44:19 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 14:44:20 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 14:44:20 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 14:44:20 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 14:44:20 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 14:44:20 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 14:44:20 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 34.972 seconds (JVM running for 36.338)
2018-10-29 14:45:33 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 14:45:33 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 14:45:33 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 72 ms
2018-10-29 14:45:34 qm_configservice [http-nio-9002-exec-2] WARN  o.s.web.servlet.PageNotFound[215] [TxId :  , SpanId : ]- Request method 'GET' not supported
2018-10-29 14:46:29 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[49] [TxId :  , SpanId : ]- 查询异常
java.lang.RuntimeException: Value for tenantId cannot be null
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.addCriterion(StaticParamsExample.java:96)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.andTenantIdEqualTo(StaticParamsExample.java:329)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$Criteria.andTenantIdEqualTo(StaticParamsExample.java:1349)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:34)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$9c68050c.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 14:46:29 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.web.StaticParamsController[48] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 15:32:25 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 15:32:25 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 15:32:25 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-29 15:32:27 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:00:13 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:00:13 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 16:00:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-29 16:00:15 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:00:16 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:00:16 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:00:16 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:00:17 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:00:17 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:00:17 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$66231945] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:00:18 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$823d1c42] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:00:19 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:00:19 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:00:19 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:00:20 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:00:20 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:00:20 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 6798 ms
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:00:21 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:00:33 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:00:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:00:36 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:00:36 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:00:36 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6ace919c
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:37 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:00:38 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 16:00:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31] and template loader path [classpath:/templates/]
2018-10-29 16:00:38 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:00:38 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:00:38 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:00:38 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:00:39 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@fc258b1: startup date [Mon Oct 29 16:00:13 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@2cd76f31
2018-10-29 16:00:39 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:00:39 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:00:39 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:00:40 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=fc258b1,type=ConfigurationPropertiesRebinder]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:00:41 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:00:42 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:00:42 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:00:42 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:00:42 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:00:43 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:00:43 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:00:43 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:00:43 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:00:43 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:00:43 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 34.47 seconds (JVM running for 35.788)
2018-10-29 16:01:39 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:01:39 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:01:39 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 120 ms
2018-10-29 16:01:40 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[52] [TxId :  , SpanId : ]- 查询异常
java.lang.RuntimeException: Value for tenantId cannot be null
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.addCriterion(StaticParamsExample.java:96)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.andTenantIdEqualTo(StaticParamsExample.java:329)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$Criteria.andTenantIdEqualTo(StaticParamsExample.java:1349)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:33)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$9c68050c.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 16:01:40 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.web.StaticParamsController[48] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 16:04:39 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[52] [TxId :  , SpanId : ]- 查询异常
java.lang.RuntimeException: Value for tenantId cannot be null
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.addCriterion(StaticParamsExample.java:96)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.andTenantIdEqualTo(StaticParamsExample.java:329)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$Criteria.andTenantIdEqualTo(StaticParamsExample.java:1349)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:33)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$9c68050c.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 16:04:39 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.web.StaticParamsController[48] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 16:05:37 qm_configservice [hystrix-selectByParamsThread-3] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[52] [TxId :  , SpanId : ]- 查询异常
java.lang.RuntimeException: Value for tenantId cannot be null
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.addCriterion(StaticParamsExample.java:96)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$GeneratedCriteria.andTenantIdEqualTo(StaticParamsExample.java:329)
	at com.asiainfo.qm.manage.domain.StaticParamsExample$Criteria.andTenantIdEqualTo(StaticParamsExample.java:1349)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:33)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$9c68050c.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:46)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 16:05:37 qm_configservice [hystrix-selectByParamsThread-3] ERROR c.a.q.m.web.StaticParamsController[48] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 16:06:07 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:06:07 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f8d7714: startup date [Mon Oct 29 16:06:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:06:10 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:06:11 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:06:11 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:06:11 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:06:12 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:06:13 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:06:13 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bc89f9e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:06:14 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$27e2a29b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:06:15 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:06:15 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:06:15 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:06:16 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:06:16 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:06:16 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 9395 ms
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:06:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:06:30 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:06:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:06:33 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:06:33 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:06:33 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@30cb223b
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f8d7714: startup date [Mon Oct 29 16:06:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 16:06:35 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:06:35 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:06:36 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:06:36 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:06:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@6f8d7714: startup date [Mon Oct 29 16:06:07 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:06:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:06:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:06:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:06:38 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6f8d7714,type=ConfigurationPropertiesRebinder]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:06:39 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:06:40 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:06:40 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:06:40 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:06:40 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:06:41 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:06:41 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:06:41 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:06:41 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:06:41 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:06:41 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 39.285 seconds (JVM running for 41.907)
2018-10-29 16:06:55 qm_configservice [http-nio-9002-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:06:55 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:06:55 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 165 ms
2018-10-29 16:07:49 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:07:49 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a26928a: startup date [Mon Oct 29 16:07:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:07:52 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:07:52 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:07:53 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:07:53 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:07:53 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:07:54 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:07:54 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$784052f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:07:54 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$945a55f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:07:56 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:07:56 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:07:56 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:07:57 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:07:57 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:07:57 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 7429 ms
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:07:58 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:08:11 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:08:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:08:13 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:08:13 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:08:14 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@68550d86
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a26928a: startup date [Mon Oct 29 16:07:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 16:08:15 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:08:15 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:08:16 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:08:16 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:08:16 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@7a26928a: startup date [Mon Oct 29 16:07:49 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:08:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:08:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:08:16 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:08:18 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7a26928a,type=ConfigurationPropertiesRebinder]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:08:20 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:08:21 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:08:21 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:08:21 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:08:21 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:08:23 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:08:23 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:08:23 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:08:23 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:08:23 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:08:23 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 38.744 seconds (JVM running for 40.51)
2018-10-29 16:09:18 qm_configservice [http-nio-9002-exec-3] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:09:18 qm_configservice [http-nio-9002-exec-3] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:09:18 qm_configservice [http-nio-9002-exec-3] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 144 ms
2018-10-29 16:09:19 qm_configservice [http-nio-9002-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver[340] [TxId :  , SpanId : ]- Failed to convert request element: org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Map'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map': no matching editors or conversion strategy found
2018-10-29 16:10:03 qm_configservice [http-nio-9002-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver[340] [TxId :  , SpanId : ]- Failed to convert request element: org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Map'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map': no matching editors or conversion strategy found
2018-10-29 16:10:18 qm_configservice [http-nio-9002-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver[340] [TxId :  , SpanId : ]- Failed to convert request element: org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Map'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map': no matching editors or conversion strategy found
2018-10-29 16:10:49 qm_configservice [http-nio-9002-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver[340] [TxId :  , SpanId : ]- Failed to convert request element: org.springframework.web.method.annotation.MethodArgumentConversionNotSupportedException: Failed to convert value of type 'java.lang.String' to required type 'java.util.Map'; nested exception is java.lang.IllegalStateException: Cannot convert value of type 'java.lang.String' to required type 'java.util.Map': no matching editors or conversion strategy found
2018-10-29 16:12:43 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:12:43 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67207d8a: startup date [Mon Oct 29 16:12:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:12:46 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:12:47 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:12:47 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:12:47 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:12:48 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:12:48 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:12:48 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4e9d61d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:12:49 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c103d91a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:12:51 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:12:51 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:12:51 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:12:51 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:12:51 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:12:51 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 8369 ms
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:12:53 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:13:05 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.util.Map,int,int) throws java.lang.Exception
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:13:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:13:09 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:13:09 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:13:09 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@603b9d4b
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67207d8a: startup date [Mon Oct 29 16:12:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 16:13:10 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:13:11 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:13:11 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:13:11 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:13:11 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@67207d8a: startup date [Mon Oct 29 16:12:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:13:12 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:13:12 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:13:12 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:13:13 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:13:15 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=67207d8a,type=ConfigurationPropertiesRebinder]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:13:16 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:13:16 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:13:17 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:13:17 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:13:17 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:13:18 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:13:18 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:13:18 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:13:18 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:13:18 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 40.042 seconds (JVM running for 42.022)
2018-10-29 16:13:29 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:13:29 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:13:29 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 96 ms
2018-10-29 16:16:41 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:16:41 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:16:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:16:44 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:16:45 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:16:45 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:16:45 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:16:46 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:16:46 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:16:46 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6adca380] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:16:47 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$86f6a67d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:16:49 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:16:49 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:16:49 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:16:50 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:16:50 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:16:50 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 9493 ms
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:16:52 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:17:05 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:17:09 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:17:09 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:17:09 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:17:09 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7dc92a06
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:16:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 16:17:11 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:17:11 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:17:12 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:17:12 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:17:12 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:16:41 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:17:13 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:17:13 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:17:13 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:17:14 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e6b9a95,type=ConfigurationPropertiesRebinder]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:17:16 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:17:17 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:17:17 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:17:17 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:17:18 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:17:18 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:17:18 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:17:18 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:17:18 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:17:18 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:17:18 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 42.164 seconds (JVM running for 43.953)
2018-10-29 16:17:30 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:17:30 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:17:30 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 109 ms
2018-10-29 16:17:43 qm_configservice [http-nio-9002-exec-5] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet][181] [TxId :  , SpanId : ]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: getUserById timed-out and fallback failed.] with root cause
java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 16:17:43 qm_configservice [http-nio-9002-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet][181] [TxId :  , SpanId : ]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: getUserById timed-out and fallback failed.] with root cause
java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 16:17:43 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[52] [TxId :  , SpanId : ]- 查询异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:40)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$f119c874.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 65 common frames omitted
Caused by: java.sql.SQLException: interrupt
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:617)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1060)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1056)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:104)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 77 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1220)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:615)
	... 82 common frames omitted
2018-10-29 16:17:43 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[52] [TxId :  , SpanId : ]- 查询异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:40)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$f119c874.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:143)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 65 common frames omitted
Caused by: java.sql.SQLException: interrupt
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:617)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1060)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1056)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:104)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 77 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1220)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
	at com.alibaba.druid.pool.DruidDataSource.init(DruidDataSource.java:615)
	... 82 common frames omitted
2018-10-29 16:17:43 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 16:17:43 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 16:18:01 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 16:18:01 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:18:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:18:04 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 16:18:05 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 16:18:05 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 16:18:05 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 16:18:06 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 16:18:07 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:18:07 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$784052f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:18:08 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$945a55f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 16:18:10 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 16:18:10 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 16:18:10 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 16:18:11 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 16:18:11 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 16:18:11 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 10035 ms
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 16:18:12 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 16:18:25 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 16:18:28 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 16:18:28 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:18:28 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:18:28 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@60ef30b1
2018-10-29 16:18:29 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:18:29 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:18:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 16:18:30 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 16:18:30 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 16:18:31 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 16:18:31 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 16:18:31 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@1e6b9a95: startup date [Mon Oct 29 16:18:01 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 16:18:31 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:18:31 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:18:31 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 16:18:33 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1e6b9a95,type=ConfigurationPropertiesRebinder]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 16:18:35 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 16:18:36 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 16:18:36 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 16:18:36 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 16:18:36 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 16:18:36 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 16:18:36 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 16:18:36 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 41.649 seconds (JVM running for 43.556)
2018-10-29 16:18:56 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 16:18:56 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 16:18:56 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 90 ms
2018-10-29 16:18:57 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 16:18:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) 
2018-10-29 16:18:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 16:18:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:00:36 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 17:00:37 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75f2099: startup date [Mon Oct 29 17:00:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:00:39 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 17:00:40 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 17:00:41 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 17:00:41 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 17:00:42 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 17:00:42 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:00:42 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec52de0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:00:43 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$86ce109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:00:45 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 17:00:45 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 17:00:45 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 17:00:46 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 17:00:46 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 17:00:46 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 9561 ms
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 17:00:48 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 17:01:01 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 17:01:04 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 17:01:04 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:01:04 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:01:04 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4ba402b5
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75f2099: startup date [Mon Oct 29 17:00:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 17:01:06 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 17:01:07 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 17:01:07 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:01:07 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:01:08 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@75f2099: startup date [Mon Oct 29 17:00:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:01:08 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:01:08 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:01:08 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:01:09 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=75f2099,type=ConfigurationPropertiesRebinder]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 17:01:11 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 17:01:12 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 17:01:12 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 17:01:12 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 17:01:13 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 17:01:13 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 17:01:13 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 17:01:13 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 17:01:13 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 17:01:14 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 17:01:14 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 42.359 seconds (JVM running for 44.036)
2018-10-29 17:01:27 qm_configservice [http-nio-9002-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 17:01:27 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 17:01:28 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-10-29 17:01:29 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:01:30 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:02:29 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 17:02:29 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Oct 29 17:02:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:02:32 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 17:02:32 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 17:02:33 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 17:02:33 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 17:02:33 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 17:02:34 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:02:34 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4e9d61d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:02:35 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c103d91a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:02:36 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 17:02:36 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 17:02:36 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 17:02:37 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 17:02:37 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 17:02:37 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 8076 ms
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 17:02:38 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 17:02:51 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 17:02:54 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 17:02:54 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:02:54 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:02:54 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3436d3d7
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:55 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:02:56 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Oct 29 17:02:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 17:02:56 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 17:02:56 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 17:02:56 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:02:56 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:02:57 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@78c7f9b3: startup date [Mon Oct 29 17:02:29 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:02:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:02:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:02:57 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:02:59 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 17:03:00 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=78c7f9b3,type=ConfigurationPropertiesRebinder]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 17:03:01 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 17:03:02 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 17:03:02 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 17:03:02 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 17:03:02 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 17:03:02 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 17:03:02 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 17:03:02 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 17:03:02 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 17:03:03 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 17:03:03 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 17:03:03 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 17:03:03 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 17:03:03 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 17:03:03 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 39.228 seconds (JVM running for 40.968)
2018-10-29 17:03:18 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 17:03:18 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 17:03:18 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2018-10-29 17:03:19 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 17:03:20 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) 
2018-10-29 17:03:20 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:03:20 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:03:20 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[54] [TxId :  , SpanId : ]- 查询异常
java.lang.ClassCastException: java.util.ArrayList cannot be cast to com.github.pagehelper.Page
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:43)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$32f5115c.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 17:03:20 qm_configservice [hystrix-selectByParamsThread-1] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:03:57 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:04:37 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 17:04:37 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71178a52: startup date [Mon Oct 29 17:04:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:04:39 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 17:04:40 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 17:04:41 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 17:04:41 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 17:04:41 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 17:04:42 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:04:42 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$2cdf0cd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:04:42 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$48f90fcf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:04:44 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 17:04:44 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 17:04:44 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 17:04:45 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 17:04:45 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 17:04:45 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 8198 ms
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 17:04:46 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 17:04:59 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 17:05:02 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 17:05:02 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:05:02 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:05:02 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@16f8df70
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:05:03 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 17:05:04 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71178a52: startup date [Mon Oct 29 17:04:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 17:05:04 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 17:05:04 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 17:05:04 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:05:04 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:05:05 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@71178a52: startup date [Mon Oct 29 17:04:37 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:05:05 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:05:05 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:05:05 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:05:06 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 17:05:08 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 17:05:09 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=71178a52,type=ConfigurationPropertiesRebinder]
2018-10-29 17:05:09 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 17:05:09 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 17:05:09 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 17:05:10 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 17:05:10 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 17:05:10 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 17:05:10 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 17:05:11 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 17:05:11 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 17:05:11 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 17:05:11 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 17:05:11 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 39.249 seconds (JVM running for 40.945)
2018-10-29 17:05:20 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 17:05:20 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 17:05:20 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-10-29 17:05:22 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:05:23 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] INFO  o.s.j.support.SQLErrorCodesFactory[127] [TxId :  , SpanId : ]- SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana]
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[55] [TxId :  , SpanId : ]- 查询异常
org.springframework.dao.TransientDataAccessResourceException: Error attempting to get column 'CRT_TIME' from result set.  Cause: java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp
; SQL []; Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp; nested exception is java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:108)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:73)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:82)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:73)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:43)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$4cf8c609.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.sql.SQLException: Value '0000-00-00 00:00:00' can not be represented as java.sql.Timestamp
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:957)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:896)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:885)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ResultSetRow.getTimestampFast(ResultSetRow.java:935)
	at com.mysql.jdbc.ByteArrayRow.getTimestampFast(ByteArrayRow.java:130)
	at com.mysql.jdbc.ResultSetImpl.getTimestampInternal(ResultSetImpl.java:5950)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5618)
	at com.mysql.jdbc.ResultSetImpl.getTimestamp(ResultSetImpl.java:5647)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:909)
	at com.alibaba.druid.filter.FilterAdapter.resultSet_getTimestamp(FilterAdapter.java:1796)
	at com.alibaba.druid.filter.FilterChainImpl.resultSet_getTimestamp(FilterChainImpl.java:907)
	at com.alibaba.druid.proxy.jdbc.ResultSetProxyImpl.getTimestamp(ResultSetProxyImpl.java:741)
	at com.alibaba.druid.pool.DruidPooledResultSet.getTimestamp(DruidPooledResultSet.java:366)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.apache.ibatis.logging.jdbc.ResultSetLogger.invoke(ResultSetLogger.java:68)
	at com.sun.proxy.$Proxy137.getTimestamp(Unknown Source)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:39)
	at org.apache.ibatis.type.DateTypeHandler.getNullableResult(DateTypeHandler.java:28)
	at org.apache.ibatis.type.BaseTypeHandler.getResult(BaseTypeHandler.java:66)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getPropertyMappingValue(DefaultResultSetHandler.java:463)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.applyPropertyMappings(DefaultResultSetHandler.java:432)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.getRowValue(DefaultResultSetHandler.java:395)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValuesForSimpleResultMap(DefaultResultSetHandler.java:347)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleRowValues(DefaultResultSetHandler.java:322)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSet(DefaultResultSetHandler.java:295)
	at org.apache.ibatis.executor.resultset.DefaultResultSetHandler.handleResultSets(DefaultResultSetHandler.java:192)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:64)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:136)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
2018-10-29 17:07:04 qm_configservice [hystrix-selectByParamsThread-2] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:07:43 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:07:49 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:09:46 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:09:51 qm_configservice [hystrix-selectByParamsThread-6] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:11:56 qm_configservice [http-nio-9002-exec-2] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet][181] [TxId :  , SpanId : ]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: getUserById timed-out and fallback failed.] with root cause
java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 17:12:02 qm_configservice [hystrix-selectByParamsThread-7] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[55] [TxId :  , SpanId : ]- 查询异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:43)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$4cf8c609.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 65 common frames omitted
Caused by: java.sql.SQLException: interrupt
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1201)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1086)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4544)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:670)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1064)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1056)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:104)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 78 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1220)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1198)
	... 87 common frames omitted
2018-10-29 17:12:02 qm_configservice [http-nio-9002-exec-2] ERROR o.a.c.c.C.[Tomcat].[localhost][181] [TxId :  , SpanId : ]- Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:203)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:469)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:392)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:311)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 42 common frames omitted
2018-10-29 17:12:11 qm_configservice [hystrix-selectByParamsThread-7] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 17:13:25 qm_configservice [http-nio-9002-exec-7] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet][181] [TxId :  , SpanId : ]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: getUserById timed-out and fallback failed.] with root cause
java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 17:13:46 qm_configservice [hystrix-selectByParamsThread-8] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[55] [TxId :  , SpanId : ]- 查询异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(StaticParamsServiceImpl.java:43)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$4cf8c609.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 65 common frames omitted
Caused by: java.sql.SQLException: interrupt
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1201)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1086)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4544)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:670)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1064)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1056)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:104)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 78 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1220)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1198)
	... 87 common frames omitted
2018-10-29 17:13:46 qm_configservice [hystrix-selectByParamsThread-8] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 17:13:46 qm_configservice [http-nio-9002-exec-7] ERROR o.a.c.c.C.[Tomcat].[localhost][181] [TxId :  , SpanId : ]- Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:203)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:469)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:392)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:311)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 42 common frames omitted
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:13:54 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:14:05 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:14:21 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:15:02 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:20:43 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 17:20:43 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@bcb09a6: startup date [Mon Oct 29 17:20:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:20:45 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 17:20:47 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 17:20:47 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 17:20:47 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 17:20:48 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 17:20:48 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:20:48 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$784052f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:20:49 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$945a55f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:20:51 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 17:20:51 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 17:20:51 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 17:20:52 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 17:20:52 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 17:20:52 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 9326 ms
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 17:20:54 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 17:21:07 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 17:21:13 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 17:21:13 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:21:13 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:21:13 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3d50a3d9
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:21:15 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:21:16 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@bcb09a6: startup date [Mon Oct 29 17:20:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 17:21:16 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 17:21:16 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 17:21:17 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:21:17 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:21:18 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@bcb09a6: startup date [Mon Oct 29 17:20:43 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:21:19 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:21:19 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:21:19 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:21:22 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 17:21:27 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=bcb09a6,type=ConfigurationPropertiesRebinder]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 17:21:28 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 17:21:29 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 17:21:30 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 17:21:30 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 17:21:30 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 17:21:30 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 17:21:31 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 17:21:31 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 17:21:31 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 17:21:31 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 17:21:31 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 17:21:31 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 54.381 seconds (JVM running for 55.955)
2018-10-29 17:21:45 qm_configservice [http-nio-9002-exec-10] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 17:21:45 qm_configservice [http-nio-9002-exec-10] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 17:21:45 qm_configservice [http-nio-9002-exec-10] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
2018-10-29 17:21:46 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:21:47 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:22:56 qm_configservice [hystrix-selectByParamsThread-2] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:23:21 qm_configservice [hystrix-selectByParamsThread-3] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:23:31 qm_configservice [hystrix-selectByParamsThread-4] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:23:56 qm_configservice [hystrix-selectByParamsThread-5] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:26:26 qm_configservice [hystrix-selectByParamsThread-6] ERROR c.a.q.m.s.i.StaticParamsServiceImpl[-1] [TxId :  , SpanId : ]- 查询异常
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:77)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:446)
	at com.sun.proxy.$Proxy99.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:230)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy103.selectByExample(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl.selectByParams(Unknown Source)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$FastClassBySpringCGLIB$$675617cc.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:738)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:157)
	at org.springframework.transaction.interceptor.TransactionInterceptor$1.proceedWithInvocation(TransactionInterceptor.java:99)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:282)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:96)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:179)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:673)
	at com.asiainfo.qm.manage.service.impl.StaticParamsServiceImpl$$EnhancerBySpringCGLIB$$94b559c1.selectByParams(<generated>)
	at com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(StaticParamsController.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:116)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.executeWithArgs(MethodExecutionAction.java:93)
	at com.netflix.hystrix.contrib.javanica.command.MethodExecutionAction.execute(MethodExecutionAction.java:78)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand$1.execute(GenericCommand.java:48)
	at com.netflix.hystrix.contrib.javanica.command.AbstractHystrixCommand.process(AbstractHystrixCommand.java:145)
	at com.netflix.hystrix.contrib.javanica.command.GenericCommand.run(GenericCommand.java:45)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:302)
	at com.netflix.hystrix.HystrixCommand$2.call(HystrixCommand.java:298)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:46)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:51)
	at rx.internal.operators.OnSubscribeDefer.call(OnSubscribeDefer.java:35)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:41)
	at rx.internal.operators.OnSubscribeDoOnEach.call(OnSubscribeDoOnEach.java:30)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48)
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
	at rx.Observable.unsafeSubscribe(Observable.java:10211)
	at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:56)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction$1.call(HystrixContexSchedulerAction.java:47)
	at com.netflix.hystrix.strategy.concurrency.HystrixContexSchedulerAction.call(HystrixContexSchedulerAction.java:69)
	at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.ibatis.exceptions.PersistenceException: 
### Error querying database.  Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
### The error may exist in file [E:\company\北京\ide\qm_configservice\target\classes\mapper\StaticParamsMapper.xml]
### The error may involve com.asiainfo.qm.manage.dao.StaticParamsMapper.selectByExample_COUNT
### The error occurred while executing a query
### Cause: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.apache.ibatis.exceptions.ExceptionFactory.wrapException(ExceptionFactory.java:30)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:150)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	... 59 common frames omitted
Caused by: org.springframework.jdbc.CannotGetJdbcConnectionException: Could not get JDBC Connection; nested exception is java.sql.SQLException: interrupt
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:80)
	at org.mybatis.spring.transaction.SpringManagedTransaction.openConnection(SpringManagedTransaction.java:82)
	at org.mybatis.spring.transaction.SpringManagedTransaction.getConnection(SpringManagedTransaction.java:68)
	at org.apache.ibatis.executor.BaseExecutor.getConnection(BaseExecutor.java:336)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:84)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at com.github.pagehelper.PageInterceptor.executeAutoCount(PageInterceptor.java:201)
	at com.github.pagehelper.PageInterceptor.intercept(PageInterceptor.java:113)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:61)
	at com.sun.proxy.$Proxy133.query(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	... 65 common frames omitted
Caused by: java.sql.SQLException: interrupt
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1201)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionDirect(DruidDataSource.java:1086)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4544)
	at com.alibaba.druid.filter.stat.StatFilter.dataSource_getConnection(StatFilter.java:670)
	at com.alibaba.druid.filter.FilterChainImpl.dataSource_connect(FilterChainImpl.java:4540)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1064)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:1056)
	at com.alibaba.druid.pool.DruidDataSource.getConnection(DruidDataSource.java:104)
	at org.springframework.jdbc.datasource.DataSourceUtils.doGetConnection(DataSourceUtils.java:111)
	at org.springframework.jdbc.datasource.DataSourceUtils.getConnection(DataSourceUtils.java:77)
	... 78 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.util.concurrent.locks.AbstractQueuedSynchronizer.acquireInterruptibly(AbstractQueuedSynchronizer.java:1220)
	at java.util.concurrent.locks.ReentrantLock.lockInterruptibly(ReentrantLock.java:335)
	at com.alibaba.druid.pool.DruidDataSource.getConnectionInternal(DruidDataSource.java:1198)
	... 87 common frames omitted
2018-10-29 17:26:26 qm_configservice [hystrix-selectByParamsThread-6] ERROR c.a.q.m.web.StaticParamsController[50] [TxId :  , SpanId : ]- 数据查询异常
2018-10-29 17:26:26 qm_configservice [http-nio-9002-exec-8] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet][181] [TxId :  , SpanId : ]- Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is com.netflix.hystrix.exception.HystrixRuntimeException: getUserById timed-out and fallback failed.] with root cause
java.util.concurrent.TimeoutException: null
	at com.netflix.hystrix.AbstractCommand.handleTimeoutViaFallback(AbstractCommand.java:997)
	at com.netflix.hystrix.AbstractCommand.access$500(AbstractCommand.java:60)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:610)
	at com.netflix.hystrix.AbstractCommand$12.call(AbstractCommand.java:601)
	at rx.internal.operators.OperatorOnErrorResumeNextViaFunction$4.onError(OperatorOnErrorResumeNextViaFunction.java:140)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at rx.internal.operators.OnSubscribeDoOnEach$DoOnEachSubscriber.onError(OnSubscribeDoOnEach.java:87)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1$1.run(AbstractCommand.java:1154)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:45)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable$1.call(HystrixContextRunnable.java:41)
	at com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable.run(HystrixContextRunnable.java:61)
	at com.netflix.hystrix.AbstractCommand$HystrixObservableTimeoutOperator$1.tick(AbstractCommand.java:1159)
	at com.netflix.hystrix.util.HystrixTimer$1.run(HystrixTimer.java:99)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
2018-10-29 17:26:26 qm_configservice [http-nio-9002-exec-8] ERROR o.a.c.c.C.[Tomcat].[localhost][181] [TxId :  , SpanId : ]- Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.catalina.connector.ClientAbortException: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321)
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284)
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118)
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1054)
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:953)
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:286)
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:231)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:203)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:81)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:113)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:827)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:738)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:85)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:967)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:901)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:970)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:861)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:846)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:469)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:392)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:311)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:395)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:868)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method)
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51)
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93)
	at sun.nio.ch.IOUtil.write(IOUtil.java:65)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471)
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134)
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101)
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157)
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1267)
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670)
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607)
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597)
	at org.apache.coyote.http11.Http11OutputBuffer.flushBuffer(Http11OutputBuffer.java:581)
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:272)
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1560)
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:283)
	at org.apache.coyote.Response.action(Response.java:173)
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317)
	... 42 common frames omitted
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ? AND PARAMS_TYPE_ID = ?) 
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 1(String)
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? and PARAMS_TYPE_ID = ? ) LIMIT ? 
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 1(String), 10(Integer)
2018-10-29 17:26:35 qm_configservice [hystrix-selectByParamsThread-7] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 2
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ? AND PARAMS_TYPE_ID = ?) 
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 1(String)
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? and PARAMS_TYPE_ID = ? ) LIMIT ? 
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 1(String), 10(Integer)
2018-10-29 17:27:11 qm_configservice [hystrix-selectByParamsThread-8] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 2
2018-10-29 17:28:37 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ? AND PARAMS_TYPE_ID = ?) 
2018-10-29 17:28:37 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), (String)
2018-10-29 17:28:37 qm_configservice [hystrix-selectByParamsThread-9] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:28:46 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ? AND PARAMS_TYPE_ID = ?) 
2018-10-29 17:28:46 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), (String)
2018-10-29 17:28:46 qm_configservice [hystrix-selectByParamsThread-10] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:29:57 qm_configservice [hystrix-selectByParamsThread-11] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ?, ? 
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer), 10(Integer)
2018-10-29 17:30:06 qm_configservice [hystrix-selectByParamsThread-12] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 2
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:30:10 qm_configservice [hystrix-selectByParamsThread-13] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ?, ? 
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer), 10(Integer)
2018-10-29 17:30:16 qm_configservice [hystrix-selectByParamsThread-14] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 2
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:30:18 qm_configservice [hystrix-selectByParamsThread-15] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ? AND PARAMS_TYPE_ID = ?) 
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 2(String)
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? and PARAMS_TYPE_ID = ? ) LIMIT ? 
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 2(String), 10(Integer)
2018-10-29 17:30:23 qm_configservice [hystrix-selectByParamsThread-16] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 4
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:30:28 qm_configservice [hystrix-selectByParamsThread-17] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:32:04 qm_configservice [hystrix-selectByParamsThread-18] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:32:11 qm_configservice [hystrix-selectByParamsThread-19] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ?, ? 
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer), 10(Integer)
2018-10-29 17:32:14 qm_configservice [hystrix-selectByParamsThread-20] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 3
2018-10-29 17:57:09 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 17:57:09 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c779e5: startup date [Mon Oct 29 17:57:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:57:11 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 17:57:12 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 17:57:12 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 17:57:12 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 17:57:13 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 17:57:13 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:57:13 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$bfe48d6a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:57:14 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$dbfe9067] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 17:57:15 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 17:57:15 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 17:57:15 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 17:57:16 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 17:57:16 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 17:57:16 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 7458 ms
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 17:57:17 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 17:57:30 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/deleteByIds],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.deleteByIds(java.lang.String) throws java.lang.Exception
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 17:57:33 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 17:57:33 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:57:33 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:57:33 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@78ea700f
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:34 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 17:57:35 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c779e5: startup date [Mon Oct 29 17:57:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 17:57:35 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 17:57:35 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 17:57:35 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 17:57:35 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 17:57:36 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@2c779e5: startup date [Mon Oct 29 17:57:09 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 17:57:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:57:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:57:36 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 17:57:37 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=2c779e5,type=ConfigurationPropertiesRebinder]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 17:57:39 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 17:57:40 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 17:57:40 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 17:57:40 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 17:57:40 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 17:57:41 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 17:57:41 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 17:57:41 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 17:57:41 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 17:57:41 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 36.798 seconds (JVM running for 38.401)
2018-10-29 17:57:55 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 17:57:55 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 17:57:55 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 100 ms
2018-10-29 17:57:56 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 17:57:58 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 17:58:04 qm_configservice [http-nio-9002-exec-2] WARN  o.s.web.servlet.PageNotFound[215] [TxId :  , SpanId : ]- Request method 'DELETE' not supported
2018-10-29 18:00:31 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-29 18:00:31 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@375b5b7f: startup date [Mon Oct 29 18:00:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 18:00:34 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-29 18:00:34 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-29 18:00:35 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-29 18:00:35 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-29 18:00:35 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-29 18:00:36 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 18:00:36 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$784052f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 18:00:36 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$945a55f4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-29 18:00:38 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-29 18:00:38 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-29 18:00:38 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-29 18:00:39 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-29 18:00:39 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-29 18:00:39 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 7509 ms
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-29 18:00:40 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-29 18:00:52 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/deleteByIds],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.deleteByIds(java.lang.String) throws java.lang.Exception
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-29 18:00:56 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-29 18:00:57 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 18:00:57 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 18:00:57 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5111f814
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-29 18:00:58 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-29 18:00:59 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@375b5b7f: startup date [Mon Oct 29 18:00:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-29 18:00:59 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-29 18:00:59 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-29 18:01:00 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-29 18:01:00 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-29 18:01:00 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@375b5b7f: startup date [Mon Oct 29 18:00:31 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-29 18:01:01 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 18:01:01 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 18:01:01 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-29 18:01:02 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=375b5b7f,type=ConfigurationPropertiesRebinder]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-29 18:01:04 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-29 18:01:05 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-29 18:01:05 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-29 18:01:05 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-29 18:01:06 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-29 18:01:06 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-29 18:01:06 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-29 18:01:06 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-29 18:01:06 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-29 18:01:06 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-29 18:01:06 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 40.231 seconds (JVM running for 42.238)
2018-10-29 18:01:20 qm_configservice [http-nio-9002-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-29 18:01:20 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-29 18:01:20 qm_configservice [http-nio-9002-exec-1] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 94 ms
2018-10-29 18:01:21 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-29 18:01:22 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-29 18:01:26 qm_configservice [http-nio-9002-exec-3] WARN  o.s.web.servlet.PageNotFound[215] [TxId :  , SpanId : ]- Request method 'DELETE' not supported
2018-10-30 09:13:33 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[597] [TxId :  , SpanId : ]- The following profiles are active: dev
2018-10-30 09:13:33 qm_configservice [main] INFO  o.s.b.c.e.AnnotationConfigEmbeddedWebApplicationContext[583] [TxId :  , SpanId : ]- Refreshing org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@417ad4f3: startup date [Tue Oct 30 09:13:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-30 09:13:35 qm_configservice [main] INFO  o.s.b.f.xml.XmlBeanDefinitionReader[317] [TxId :  , SpanId : ]- Loading XML bean definitions from class path resource [config/transaction.xml]
2018-10-30 09:13:36 qm_configservice [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate[165] [TxId :  , SpanId : ]- Multiple Spring Data modules found, entering strict repository configuration mode!
2018-10-30 09:13:37 qm_configservice [main] INFO  o.s.b.f.s.DefaultListableBeanFactory[828] [TxId :  , SpanId : ]- Overriding bean definition for bean 'org.springframework.transaction.config.internalTransactionAdvisor' with a different definition: replacing [Root bean: class [org.springframework.transaction.interceptor.BeanFactoryTransactionAttributeSourceAdvisor]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null] with [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration; factoryMethodName=transactionAdvisor; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/transaction/annotation/ProxyTransactionManagementConfiguration.class]]
2018-10-30 09:13:37 qm_configservice [main] INFO  o.s.c.a.ConfigurationClassBeanDefinitionReader[305] [TxId :  , SpanId : ]- Skipping bean definition for [BeanMethod:name=transactionalEventListenerFactory,declaringClass=org.springframework.transaction.annotation.AbstractTransactionManagementConfiguration]: a definition for bean 'org.springframework.transaction.config.internalTransactionalEventListenerFactory' already exists. This top-level bean definition is considered as an override.
2018-10-30 09:13:37 qm_configservice [main] INFO  o.s.cloud.context.scope.GenericScope[263] [TxId :  , SpanId : ]- BeanFactory id=c4f79226-3708-313b-aa31-99fa5abdf438
2018-10-30 09:13:38 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor#0' of type [org.springframework.aop.support.DefaultBeanFactoryPointcutAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-30 09:13:38 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4e9d61d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-30 09:13:38 qm_configservice [main] INFO  o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker[327] [TxId :  , SpanId : ]- Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c103d91a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2018-10-30 09:13:41 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[89] [TxId :  , SpanId : ]- Tomcat initialized with port(s): 9002 (http)
2018-10-30 09:13:41 qm_configservice [main] INFO  o.a.catalina.core.StandardService[179] [TxId :  , SpanId : ]- Starting service [Tomcat]
2018-10-30 09:13:41 qm_configservice [main] INFO  o.a.catalina.core.StandardEngine[179] [TxId :  , SpanId : ]- Starting Servlet Engine: Apache Tomcat/8.5.23
2018-10-30 09:13:42 qm_configservice [localhost-startStop-1] INFO  org.apache.jasper.servlet.TldScanner[179] [TxId :  , SpanId : ]- At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2018-10-30 09:13:42 qm_configservice [localhost-startStop-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring embedded WebApplicationContext
2018-10-30 09:13:42 qm_configservice [localhost-startStop-1] INFO  o.s.web.context.ContextLoader[276] [TxId :  , SpanId : ]- Root WebApplicationContext: initialization completed in 8794 ms
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'proxyStreamServlet' to [/proxy.stream]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'dispatcherServlet' to [/]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.ServletRegistrationBean[190] [TxId :  , SpanId : ]- Mapping servlet: 'statViewServlet' to [/druid/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'metricsFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'characterEncodingFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'httpPutFormContentFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'requestContextFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'webRequestLoggingFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[271] [TxId :  , SpanId : ]- Mapping filter: 'webStatFilter' to urls: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'corsFilter' to: [/*]
2018-10-30 09:13:43 qm_configservice [localhost-startStop-1] INFO  o.s.b.w.s.FilterRegistrationBean[258] [TxId :  , SpanId : ]- Mapping filter: 'applicationContextIdFilter' to: [/*]
2018-10-30 09:13:55 qm_configservice [main] INFO  o.s.s.c.ThreadPoolTaskExecutor[165] [TxId :  , SpanId : ]- Initializing ExecutorService 
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/kc/configservice/users/{id}],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.DemoUserServiceResponse com.asiainfo.qm.manage.web.DemoUserController.getUserById(java.lang.Integer) throws java.lang.Exception
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/healthcheck],methods=[GET]}" onto public java.lang.String com.asiainfo.qm.manage.web.HealthCheckController.healthCheck()
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/deleteByIds],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.deleteByIds(java.lang.String) throws java.lang.Exception
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/qm/configservice/staticParams/selectByParams],methods=[GET]}" onto public com.asiainfo.qm.manage.vo.StaticParamsServiceResponse com.asiainfo.qm.manage.web.StaticParamsController.selectByParams(java.lang.String,int,int) throws java.lang.Exception
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix/{path}]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.monitor(java.lang.String,org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix]}" onto public java.lang.String org.springframework.cloud.netflix.hystrix.dashboard.HystrixDashboardController.home(org.springframework.ui.Model,org.springframework.web.context.request.WebRequest)
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2018-10-30 09:13:59 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2018-10-30 09:13:59 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-30 09:13:59 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-30 09:13:59 qm_configservice [main] INFO  c.n.config.DynamicPropertyFactory[281] [TxId :  , SpanId : ]- DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3f40568e
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/features || /features.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/trace || /trace.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/dump || /dump.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/beans || /beans.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/hystrix.stream/**]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.cloud.netflix.endpoint.ServletWrappingEndpoint.handle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.lang.Exception
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/health || /health.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.HealthMvcEndpoint.invoke(javax.servlet.http.HttpServletRequest,java.security.Principal)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.get(java.lang.String)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers/{name:.*}],methods=[POST],consumes=[application/vnd.spring-boot.actuator.v1+json || application/json],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.LoggersMvcEndpoint.set(java.lang.String,java.util.Map<java.lang.String, java.lang.String>)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/loggers || /loggers.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/restart || /restart.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.restart.RestartMvcEndpoint.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.value(java.util.Map<java.lang.String, java.lang.String>)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/reset],methods=[POST]}" onto public java.util.Map<java.lang.String, java.lang.Object> org.springframework.cloud.context.environment.EnvironmentManagerMvcEndpoint.reset()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EnvironmentMvcEndpoint.value(java.lang.String)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/env || /env.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/autoconfig || /autoconfig.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/heapdump || /heapdump.json],methods=[GET],produces=[application/octet-stream]}" onto public void org.springframework.boot.actuate.endpoint.mvc.HeapdumpMvcEndpoint.invoke(boolean,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse) throws java.io.IOException,javax.servlet.ServletException
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics/{name:.*}],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.MetricsMvcEndpoint.value(java.lang.String)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/metrics || /metrics.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/info || /info.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/refresh || /refresh.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/mappings || /mappings.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/configprops || /configprops.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/pause || /pause.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/auditevents || /auditevents.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public org.springframework.http.ResponseEntity<?> org.springframework.boot.actuate.endpoint.mvc.AuditEventsMvcEndpoint.findByPrincipalAndAfterAndType(java.lang.String,java.util.Date,java.lang.String)
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/resume || /resume.json],methods=[POST]}" onto public java.lang.Object org.springframework.cloud.endpoint.GenericPostableMvcEndpoint.invoke()
2018-10-30 09:14:01 qm_configservice [main] INFO  o.s.b.a.e.mvc.EndpointHandlerMapping[543] [TxId :  , SpanId : ]- Mapped "{[/archaius || /archaius.json],methods=[GET],produces=[application/vnd.spring-boot.actuator.v1+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.mvc.EndpointMvcAdapter.invoke()
2018-10-30 09:14:02 qm_configservice [main] INFO  o.s.u.f.SpringTemplateLoader[61] [TxId :  , SpanId : ]- SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@417ad4f3: startup date [Tue Oct 30 09:13:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517] and template loader path [classpath:/templates/]
2018-10-30 09:14:02 qm_configservice [main] INFO  o.s.w.s.v.f.FreeMarkerConfigurer[127] [TxId :  , SpanId : ]- ClassTemplateLoader for Spring macros added to FreeMarker configuration
2018-10-30 09:14:02 qm_configservice [main] INFO  s.d.s.w.PropertySourcedRequestMappingHandlerMapping[69] [TxId :  , SpanId : ]- Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2018-10-30 09:14:02 qm_configservice [main] WARN  c.n.c.sources.URLConfigurationSource[121] [TxId :  , SpanId : ]- No URLs will be polled as dynamic configuration sources.
2018-10-30 09:14:02 qm_configservice [main] INFO  c.n.c.sources.URLConfigurationSource[122] [TxId :  , SpanId : ]- To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2018-10-30 09:14:03 qm_configservice [main] INFO  o.s.w.s.m.m.a.RequestMappingHandlerAdapter[534] [TxId :  , SpanId : ]- Looking for @ControllerAdvice: org.springframework.boot.context.embedded.AnnotationConfigEmbeddedWebApplicationContext@417ad4f3: startup date [Tue Oct 30 09:13:33 CST 2018]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@3f91b517
2018-10-30 09:14:03 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-30 09:14:03 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-30 09:14:03 qm_configservice [main] INFO  o.s.w.s.h.SimpleUrlHandlerMapping[362] [TxId :  , SpanId : ]- Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2018-10-30 09:14:05 qm_configservice [main] WARN  o.s.b.s.r.RedisStarterDeprecationWarningAutoConfiguration[43] [TxId :  , SpanId : ]- spring-boot-starter-redis is deprecated as of Spring Boot 1.4, please migrate to spring-boot-starter-data-redis
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'dataSource' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshEndpoint' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'restartEndpoint' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'environmentManager' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[916] [TxId :  , SpanId : ]- Bean with name 'refreshScope' has been autodetected for JMX exposure
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'restartEndpoint': registering with JMX server as MBean [org.springframework.cloud.context.restart:name=restartEndpoint,type=RestartEndpoint]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=417ad4f3,type=ConfigurationPropertiesRebinder]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[671] [TxId :  , SpanId : ]- Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.j.e.a.AnnotationMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'refreshEndpoint': registering with JMX server as MBean [org.springframework.cloud.endpoint:name=refreshEndpoint,type=RefreshEndpoint]
2018-10-30 09:14:07 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[431] [TxId :  , SpanId : ]- Registering beans for JMX exposure on startup
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 0
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'auditEventsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=auditEventsEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'archaiusEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=archaiusEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'featuresEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=featuresEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'requestMappingEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=requestMappingEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'environmentEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=environmentEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'healthEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=healthEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'beansEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=beansEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'infoEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=infoEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'loggersEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=loggersEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'metricsEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=metricsEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'traceEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=traceEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'dumpEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=dumpEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'autoConfigurationReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=autoConfigurationReportEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.b.a.e.jmx.EndpointMBeanExporter[678] [TxId :  , SpanId : ]- Located managed bean 'configurationPropertiesReportEndpoint': registering with JMX server as MBean [org.springframework.boot:type=Endpoint,name=configurationPropertiesReportEndpoint]
2018-10-30 09:14:08 qm_configservice [main] INFO  o.s.c.s.DefaultLifecycleProcessor[343] [TxId :  , SpanId : ]- Starting beans in phase 2147483647
2018-10-30 09:14:08 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[147] [TxId :  , SpanId : ]- Context refreshed
2018-10-30 09:14:09 qm_configservice [main] INFO  s.d.s.w.p.DocumentationPluginsBootstrapper[150] [TxId :  , SpanId : ]- Found 1 custom documentation plugin(s)
2018-10-30 09:14:09 qm_configservice [main] INFO  s.d.s.w.s.ApiListingReferenceScanner[41] [TxId :  , SpanId : ]- Scanning for api listing references
2018-10-30 09:14:09 qm_configservice [main] INFO  o.s.c.n.h.HystrixCircuitBreakerConfiguration$HystrixMetricsPollerConfiguration[138] [TxId :  , SpanId : ]- Starting poller
2018-10-30 09:14:09 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Initializing ProtocolHandler ["http-nio-9002"]
2018-10-30 09:14:09 qm_configservice [main] INFO  o.a.coyote.http11.Http11NioProtocol[179] [TxId :  , SpanId : ]- Starting ProtocolHandler ["http-nio-9002"]
2018-10-30 09:14:09 qm_configservice [main] INFO  o.a.tomcat.util.net.NioSelectorPool[179] [TxId :  , SpanId : ]- Using a shared selector for servlet write/read
2018-10-30 09:14:09 qm_configservice [main] INFO  o.s.b.c.e.t.TomcatEmbeddedServletContainer[201] [TxId :  , SpanId : ]- Tomcat started on port(s): 9002 (http)
2018-10-30 09:14:10 qm_configservice [main] INFO  com.asiainfo.qm.manage.Application[57] [TxId :  , SpanId : ]- Started Application in 42.064 seconds (JVM running for 44.316)
2018-10-30 09:16:38 qm_configservice [http-nio-9002-exec-2] INFO  o.a.c.c.C.[Tomcat].[localhost].[/][179] [TxId :  , SpanId : ]- Initializing Spring FrameworkServlet 'dispatcherServlet'
2018-10-30 09:16:38 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[489] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization started
2018-10-30 09:16:38 qm_configservice [http-nio-9002-exec-2] INFO  o.s.web.servlet.DispatcherServlet[508] [TxId :  , SpanId : ]- FrameworkServlet 'dispatcherServlet': initialization completed in 92 ms
2018-10-30 09:16:39 qm_configservice [hystrix-selectByParamsThread-1] INFO  c.alibaba.druid.pool.DruidDataSource[785] [TxId :  , SpanId : ]- {dataSource-1} inited
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==>  Preparing: SELECT count(0) FROM t_qm_static_params WHERE (TENANT_ID = ?) 
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String)
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample_COUNT[159] [TxId :  , SpanId : ]- <==      Total: 1
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==>  Preparing: select PARAMS_TYPE_ID, PARAMS_CODE, PARAMS_PURPOSE_ID, TENANT_ID, PROVINCE_ID, PARAMS_NAME, CRT_TIME, MODF_TIME, RESERVE_1, RESERVE_2, RESERVE_3, RESERVE_4, RESERVE_5, RESERVE_6, RESERVE_7, RESERVE_8, RESERVE_9, RESERVE_10 from t_qm_static_params WHERE ( TENANT_ID = ? ) LIMIT ? 
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- ==> Parameters: 10010000(String), 10(Integer)
2018-10-30 09:16:40 qm_configservice [hystrix-selectByParamsThread-1] DEBUG c.a.q.m.d.S.selectByExample[159] [TxId :  , SpanId : ]- <==      Total: 10
2018-10-30 09:16:55 qm_configservice [http-nio-9002-exec-6] WARN  o.s.web.servlet.PageNotFound[215] [TxId :  , SpanId : ]- Request method 'DELETE' not supported
