<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.asiainfo.qm.manage.dao.QmStrategyElementMapper" >
  <resultMap id="BaseResultMap" type="com.asiainfo.qm.manage.domain.QmStrategyElement" >
    <id column="ELEMENT_ID" property="elementId" jdbcType="VARCHAR" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="PROVINCE_ID" property="provinceId" jdbcType="VARCHAR" />
    <result column="CITY_ID" property="cityId" jdbcType="VARCHAR" />
    <result column="PARAMS_TYPE_ID" property="paramsTypeId" jdbcType="VARCHAR" />
    <result column="PARAMS_NAME" property="paramsTypeName" jdbcType="VARCHAR" />
    <result column="ELEMENT_CODE" property="elementCode" jdbcType="VARCHAR" />
    <result column="ELEMENT_NAME" property="elementName" jdbcType="VARCHAR" />
    <result column="ELEMENT_TYPE" property="elementType" jdbcType="VARCHAR" />
    <result column="IS_VALIDATE" property="isValidate" jdbcType="CHAR" />
    <result column="IS_REGION" property="isRegion" jdbcType="CHAR" />
    <result column="IS_NEED" property="isNeed" jdbcType="CHAR" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="RESERVE_1" property="reserve1" jdbcType="VARCHAR" />
    <result column="RESERVE_2" property="reserve2" jdbcType="VARCHAR" />
    <result column="RESERVE_3" property="reserve3" jdbcType="VARCHAR" />
    <result column="RESERVE_4" property="reserve4" jdbcType="VARCHAR" />
    <result column="RESERVE_5" property="reserve5" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Delete_By_Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and t.${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and t.${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and t.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and t.${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    t.ELEMENT_ID, t.TENANT_ID, t.PROVINCE_ID, t.CITY_ID, t.PARAMS_TYPE_ID,t1.PARAMS_NAME, t.ELEMENT_CODE, t.ELEMENT_NAME,
    t.ELEMENT_TYPE, t.IS_VALIDATE, t.IS_REGION, t.IS_NEED, t.REMARK, t.RESERVE_1, t.RESERVE_2, t.RESERVE_3,
    t.RESERVE_4, t.RESERVE_5
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElementExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_qm_strategy_element t LEFT OUTER JOIN t_qm_static_params t1 ON t.PARAMS_TYPE_ID = t1.PARAMS_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by t.${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from t_qm_strategy_element t LEFT OUTER JOIN t_qm_static_params t1 ON t.PARAMS_TYPE_ID = t1.PARAMS_CODE
    where ELEMENT_ID = #{elementId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from t_qm_strategy_element
    where ELEMENT_ID = #{elementId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElementExample" >
    delete from t_qm_strategy_element
    <if test="_parameter != null" >
      <include refid="Delete_By_Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElement" >
    insert into t_qm_strategy_element (ELEMENT_ID, TENANT_ID, PROVINCE_ID, 
      CITY_ID, PARAMS_TYPE_ID, ELEMENT_CODE, 
      ELEMENT_NAME, ELEMENT_TYPE, IS_VALIDATE, 
      IS_REGION, IS_NEED, REMARK, 
      RESERVE_1, RESERVE_2, RESERVE_3, 
      RESERVE_4, RESERVE_5)
    values (#{elementId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{provinceId,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=VARCHAR}, #{paramsTypeId,jdbcType=VARCHAR}, #{elementCode,jdbcType=VARCHAR}, 
      #{elementName,jdbcType=VARCHAR}, #{elementType,jdbcType=VARCHAR}, #{isValidate,jdbcType=CHAR}, 
      #{isRegion,jdbcType=CHAR}, #{isNeed,jdbcType=CHAR}, #{remark,jdbcType=VARCHAR}, 
      #{reserve1,jdbcType=VARCHAR}, #{reserve2,jdbcType=VARCHAR}, #{reserve3,jdbcType=VARCHAR}, 
      #{reserve4,jdbcType=VARCHAR}, #{reserve5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElement" >
    insert into t_qm_strategy_element
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="elementId != null" >
        ELEMENT_ID,
      </if>
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="provinceId != null" >
        PROVINCE_ID,
      </if>
      <if test="cityId != null" >
        CITY_ID,
      </if>
      <if test="paramsTypeId != null" >
        PARAMS_TYPE_ID,
      </if>
      <if test="elementCode != null" >
        ELEMENT_CODE,
      </if>
      <if test="elementName != null" >
        ELEMENT_NAME,
      </if>
      <if test="elementType != null" >
        ELEMENT_TYPE,
      </if>
      <if test="isValidate != null" >
        IS_VALIDATE,
      </if>
      <if test="isRegion != null" >
        IS_REGION,
      </if>
      <if test="isNeed != null" >
        IS_NEED,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="reserve1 != null" >
        RESERVE_1,
      </if>
      <if test="reserve2 != null" >
        RESERVE_2,
      </if>
      <if test="reserve3 != null" >
        RESERVE_3,
      </if>
      <if test="reserve4 != null" >
        RESERVE_4,
      </if>
      <if test="reserve5 != null" >
        RESERVE_5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="elementId != null" >
        #{elementId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="paramsTypeId != null" >
        #{paramsTypeId,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null" >
        #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="elementName != null" >
        #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementType != null" >
        #{elementType,jdbcType=VARCHAR},
      </if>
      <if test="isValidate != null" >
        #{isValidate,jdbcType=CHAR},
      </if>
      <if test="isRegion != null" >
        #{isRegion,jdbcType=CHAR},
      </if>
      <if test="isNeed != null" >
        #{isNeed,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null" >
        #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="reserve4 != null" >
        #{reserve4,jdbcType=VARCHAR},
      </if>
      <if test="reserve5 != null" >
        #{reserve5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElementExample" resultType="java.lang.Integer" >
    select count(t.*) from t_qm_strategy_element t LEFT OUTER JOIN t_qm_static_params t1 ON t.PARAMS_TYPE_ID = t1.PARAMS_CODE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_qm_strategy_element
    <set >
      <if test="record.elementId != null" >
        ELEMENT_ID = #{record.elementId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceId != null" >
        PROVINCE_ID = #{record.provinceId,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        CITY_ID = #{record.cityId,jdbcType=VARCHAR},
      </if>
      <if test="record.paramsTypeId != null" >
        PARAMS_TYPE_ID = #{record.paramsTypeId,jdbcType=VARCHAR},
      </if>
      <if test="record.elementCode != null" >
        ELEMENT_CODE = #{record.elementCode,jdbcType=VARCHAR},
      </if>
      <if test="record.elementName != null" >
        ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementType != null" >
        ELEMENT_TYPE = #{record.elementType,jdbcType=VARCHAR},
      </if>
      <if test="record.isValidate != null" >
        IS_VALIDATE = #{record.isValidate,jdbcType=CHAR},
      </if>
      <if test="record.isRegion != null" >
        IS_REGION = #{record.isRegion,jdbcType=CHAR},
      </if>
      <if test="record.isNeed != null" >
        IS_NEED = #{record.isNeed,jdbcType=CHAR},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve1 != null" >
        RESERVE_1 = #{record.reserve1,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve2 != null" >
        RESERVE_2 = #{record.reserve2,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve3 != null" >
        RESERVE_3 = #{record.reserve3,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve4 != null" >
        RESERVE_4 = #{record.reserve4,jdbcType=VARCHAR},
      </if>
      <if test="record.reserve5 != null" >
        RESERVE_5 = #{record.reserve5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_qm_strategy_element
    set ELEMENT_ID = #{record.elementId,jdbcType=VARCHAR},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      PROVINCE_ID = #{record.provinceId,jdbcType=VARCHAR},
      CITY_ID = #{record.cityId,jdbcType=VARCHAR},
      PARAMS_TYPE_ID = #{record.paramsTypeId,jdbcType=VARCHAR},
      ELEMENT_CODE = #{record.elementCode,jdbcType=VARCHAR},
      ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      ELEMENT_TYPE = #{record.elementType,jdbcType=VARCHAR},
      IS_VALIDATE = #{record.isValidate,jdbcType=CHAR},
      IS_REGION = #{record.isRegion,jdbcType=CHAR},
      IS_NEED = #{record.isNeed,jdbcType=CHAR},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      RESERVE_1 = #{record.reserve1,jdbcType=VARCHAR},
      RESERVE_2 = #{record.reserve2,jdbcType=VARCHAR},
      RESERVE_3 = #{record.reserve3,jdbcType=VARCHAR},
      RESERVE_4 = #{record.reserve4,jdbcType=VARCHAR},
      RESERVE_5 = #{record.reserve5,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElement" >
    update t_qm_strategy_element
    <set >
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        PROVINCE_ID = #{provinceId,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        CITY_ID = #{cityId,jdbcType=VARCHAR},
      </if>
      <if test="paramsTypeId != null" >
        PARAMS_TYPE_ID = #{paramsTypeId,jdbcType=VARCHAR},
      </if>
      <if test="elementCode != null" >
        ELEMENT_CODE = #{elementCode,jdbcType=VARCHAR},
      </if>
      <if test="elementName != null" >
        ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementType != null" >
        ELEMENT_TYPE = #{elementType,jdbcType=VARCHAR},
      </if>
      <if test="isValidate != null" >
        IS_VALIDATE = #{isValidate,jdbcType=CHAR},
      </if>
      <if test="isRegion != null" >
        IS_REGION = #{isRegion,jdbcType=CHAR},
      </if>
      <if test="isNeed != null" >
        IS_NEED = #{isNeed,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reserve1 != null" >
        RESERVE_1 = #{reserve1,jdbcType=VARCHAR},
      </if>
      <if test="reserve2 != null" >
        RESERVE_2 = #{reserve2,jdbcType=VARCHAR},
      </if>
      <if test="reserve3 != null" >
        RESERVE_3 = #{reserve3,jdbcType=VARCHAR},
      </if>
      <if test="reserve4 != null" >
        RESERVE_4 = #{reserve4,jdbcType=VARCHAR},
      </if>
      <if test="reserve5 != null" >
        RESERVE_5 = #{reserve5,jdbcType=VARCHAR},
      </if>
    </set>
    where ELEMENT_ID = #{elementId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.asiainfo.qm.manage.domain.QmStrategyElement" >
    update t_qm_strategy_element
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      PROVINCE_ID = #{provinceId,jdbcType=VARCHAR},
      CITY_ID = #{cityId,jdbcType=VARCHAR},
      PARAMS_TYPE_ID = #{paramsTypeId,jdbcType=VARCHAR},
      ELEMENT_CODE = #{elementCode,jdbcType=VARCHAR},
      ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      ELEMENT_TYPE = #{elementType,jdbcType=VARCHAR},
      IS_VALIDATE = #{isValidate,jdbcType=CHAR},
      IS_REGION = #{isRegion,jdbcType=CHAR},
      IS_NEED = #{isNeed,jdbcType=CHAR},
      REMARK = #{remark,jdbcType=VARCHAR},
      RESERVE_1 = #{reserve1,jdbcType=VARCHAR},
      RESERVE_2 = #{reserve2,jdbcType=VARCHAR},
      RESERVE_3 = #{reserve3,jdbcType=VARCHAR},
      RESERVE_4 = #{reserve4,jdbcType=VARCHAR},
      RESERVE_5 = #{reserve5,jdbcType=VARCHAR}
    where ELEMENT_ID = #{elementId,jdbcType=VARCHAR}
  </update>
</mapper>